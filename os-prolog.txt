os(parse_integer,group_specification(bancomat_group,[role(moneyKeeper,[],[soc],1,1,[],[]),role(requestHandler,[],[soc],1,1,[],[]),role(parser,[],[soc],1,1,[],[]),role(bancomatHandler,[],[soc],1,1,[],[]),role(reader,[],[soc],1,1,[],[])],[],properties([])),[scheme_specification(bancomat_sch,goal(withdraw,performance,"",all,"infinity",[],",[],plan(sequence,[goal(obtainAmount,performance,"",all,"infinity",[],",[],plan(parallel,[goal(getAmountAsString,performance,"",all,"infinity",[],",[],noplan),goal(parseAmount,performance,"",all,"infinity",[],",[nan,negativeAmount],noplan)])),goal(provideMoney,performance,"",all,"infinity",[],",[],noplan)])),[mission(mWithdraw,1,1,[withdraw],[]),mission(mObtainAmount,1,1,[doSomethingToRecoverNegative,doSomethingToRecoverNan,obtainAmount],[]),mission(mGetAmountAsString,1,1,[getAmountAsString],[]),mission(mProvideMoney,1,1,[provideMoney],[]),mission(mParseAmount,1,1,[parseAmount],[])],properties([]))],[norm(n1,bancomatHandler,obligation,bancomat_sch.mWithdraw),norm(n2,requestHandler,obligation,bancomat_sch.mObtainAmount),norm(n3,reader,obligation,bancomat_sch.mGetAmountAsString),norm(n4,parser,obligation,bancomat_sch.mParseAmount),norm(n5,moneyKeeper,obligation,bancomat_sch.mProvideMoney)])
